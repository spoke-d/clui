// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spoke-d/clui (interfaces: UI)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	clui "github.com/spoke-d/clui"
	reflect "reflect"
)

// MockUI is a mock of UI interface
type MockUI struct {
	ctrl     *gomock.Controller
	recorder *MockUIMockRecorder
}

// MockUIMockRecorder is the mock recorder for MockUI
type MockUIMockRecorder struct {
	mock *MockUI
}

// NewMockUI creates a new mock instance
func NewMockUI(ctrl *gomock.Controller) *MockUI {
	mock := &MockUI{ctrl: ctrl}
	mock.recorder = &MockUIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUI) EXPECT() *MockUIMockRecorder {
	return m.recorder
}

// Ask mocks base method
func (m *MockUI) Ask(arg0 string) (string, error) {
	ret := m.ctrl.Call(m, "Ask", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Ask indicates an expected call of Ask
func (mr *MockUIMockRecorder) Ask(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ask", reflect.TypeOf((*MockUI)(nil).Ask), arg0)
}

// AskSecret mocks base method
func (m *MockUI) AskSecret(arg0 string) (string, error) {
	ret := m.ctrl.Call(m, "AskSecret", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AskSecret indicates an expected call of AskSecret
func (mr *MockUIMockRecorder) AskSecret(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AskSecret", reflect.TypeOf((*MockUI)(nil).AskSecret), arg0)
}

// Error mocks base method
func (m *MockUI) Error(arg0 string) {
	m.ctrl.Call(m, "Error", arg0)
}

// Error indicates an expected call of Error
func (mr *MockUIMockRecorder) Error(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MockUI)(nil).Error), arg0)
}

// Formatter mocks base method
func (m *MockUI) Formatter(arg0 clui.Formatter) {
	m.ctrl.Call(m, "Formatter", arg0)
}

// Formatter indicates an expected call of Formatter
func (mr *MockUIMockRecorder) Formatter(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Formatter", reflect.TypeOf((*MockUI)(nil).Formatter), arg0)
}

// Info mocks base method
func (m *MockUI) Info(arg0 string) {
	m.ctrl.Call(m, "Info", arg0)
}

// Info indicates an expected call of Info
func (mr *MockUIMockRecorder) Info(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockUI)(nil).Info), arg0)
}

// Output mocks base method
func (m *MockUI) Output(arg0 interface{}) {
	m.ctrl.Call(m, "Output", arg0)
}

// Output indicates an expected call of Output
func (mr *MockUIMockRecorder) Output(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Output", reflect.TypeOf((*MockUI)(nil).Output), arg0)
}

// Warn mocks base method
func (m *MockUI) Warn(arg0 string) {
	m.ctrl.Call(m, "Warn", arg0)
}

// Warn indicates an expected call of Warn
func (mr *MockUIMockRecorder) Warn(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Warn", reflect.TypeOf((*MockUI)(nil).Warn), arg0)
}
