// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spoke-d/clui/autocomplete/install (interfaces: Executable)

// Package install is a generated GoMock package.
package install

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockExecutable is a mock of Executable interface
type MockExecutable struct {
	ctrl     *gomock.Controller
	recorder *MockExecutableMockRecorder
}

// MockExecutableMockRecorder is the mock recorder for MockExecutable
type MockExecutableMockRecorder struct {
	mock *MockExecutable
}

// NewMockExecutable creates a new mock instance
func NewMockExecutable(ctrl *gomock.Controller) *MockExecutable {
	mock := &MockExecutable{ctrl: ctrl}
	mock.recorder = &MockExecutableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExecutable) EXPECT() *MockExecutableMockRecorder {
	return m.recorder
}

// BinaryPath mocks base method
func (m *MockExecutable) BinaryPath() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BinaryPath")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BinaryPath indicates an expected call of BinaryPath
func (mr *MockExecutableMockRecorder) BinaryPath() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BinaryPath", reflect.TypeOf((*MockExecutable)(nil).BinaryPath))
}
